// <auto-generated />
using System;
using DommunBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DommunBackend.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DommunBackend.DomainLayer.DTOs.AgenteDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("AceptaArriendo")
                        .HasColumnType("bit");

                    b.Property<bool>("AceptaVenta")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionPerfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaInicioPlan")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoPerfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<string>("MunicipioNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroAvaluo")
                        .HasColumnType("int");

                    b.Property<int>("PlanMembresiaId")
                        .HasColumnType("int");

                    b.Property<string>("PlanMembresiaNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrecioArriendoMin")
                        .HasColumnType("float");

                    b.Property<double>("PrecioVentaMin")
                        .HasColumnType("float");

                    b.Property<bool>("Publicado")
                        .HasColumnType("bit");

                    b.Property<string>("RedesSociales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoContacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZonificacionId")
                        .HasColumnType("int");

                    b.Property<string>("ZonificacionNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AgenteDto");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Agente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("AceptaArriendo")
                        .HasColumnType("bit");

                    b.Property<bool>("AceptaVenta")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionPerfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaInicioPlan")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoPerfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroAvaluo")
                        .HasColumnType("int");

                    b.Property<int>("PlanMembresiaId")
                        .HasColumnType("int");

                    b.Property<double>("PrecioArriendoMin")
                        .HasColumnType("float");

                    b.Property<double>("PrecioVentaMin")
                        .HasColumnType("float");

                    b.Property<bool>("Publicado")
                        .HasColumnType("bit");

                    b.Property<string>("RedesSociales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoContacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZonificacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MunicipioId");

                    b.HasIndex("PlanMembresiaId");

                    b.HasIndex("ZonificacionId");

                    b.ToTable("Agentes");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Caracteristica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("AplicaApartamento")
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaBodega")
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaCasa")
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaLocal")
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaLote")
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaOficina")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoCaracteristicaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoCaracteristicaId");

                    b.ToTable("Caracteristicas");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.CatGestionDocumental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatGestionDocumentales");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AgenteId")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nacionalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoPrincipal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoSecundario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgenteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Comercial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Amoblado")
                        .HasColumnType("bit");

                    b.Property<int>("AnioConstruccion")
                        .HasColumnType("int");

                    b.Property<decimal>("AreaConstruida")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AreaPrivada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AreaTerraza")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Balcones")
                        .HasColumnType("int");

                    b.Property<int>("Banos")
                        .HasColumnType("int");

                    b.Property<bool>("Cocineta")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deposito")
                        .HasColumnType("bit");

                    b.Property<int>("Espacios")
                        .HasColumnType("int");

                    b.Property<int>("EstacionamientosCubiertos")
                        .HasColumnType("int");

                    b.Property<int>("EstacionamientosDescubiertos")
                        .HasColumnType("int");

                    b.Property<int>("EstacionamientosTotales")
                        .HasColumnType("int");

                    b.Property<int>("Estrato")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.Property<int>("Terrazas")
                        .HasColumnType("int");

                    b.Property<int>("TipoComercial")
                        .HasColumnType("int");

                    b.Property<int>("TipoEstacionamientos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropiedadId")
                        .IsUnique();

                    b.ToTable("Comerciales");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.DocumentoPropiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Archivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.Property<int>("TipoDocumentoPropiedadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoDocumentoPropiedadId");

                    b.ToTable("DocumentoPropiedades");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.FotografiaPropiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EsPrincipal")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.Property<bool>("Valida")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PropiedadId");

                    b.ToTable("FotografiaPropiedades");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.GestionDocumental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CatGestionDocumentalId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentoSubido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatGestionDocumentalId");

                    b.ToTable("GestionDocumentales");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Industrial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AnioConstruccion")
                        .HasColumnType("int");

                    b.Property<decimal>("AreaConstruida")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AreaLote")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AreaPrivada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Banos")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Espacios")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.Property<int>("TipoBodega")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropiedadId")
                        .IsUnique();

                    b.ToTable("Industriales");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Lote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("AreaLote")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.Property<int>("TipoLote")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropiedadId")
                        .IsUnique();

                    b.ToTable("Lotes");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.PlanMembresia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioFijo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioPromocion")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PlanMembresias");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Propiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AgenteId")
                        .HasColumnType("int");

                    b.Property<string>("Avaluo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CaracteristicaId")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Coordenadas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dreccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dscripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LinkVirtual360")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatriculaInmobiliaria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgenteId");

                    b.HasIndex("CaracteristicaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("MunicipioId");

                    b.ToTable("Propiedades");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Publicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AgenteId")
                        .HasColumnType("int");

                    b.Property<bool>("BajoPrecio")
                        .HasColumnType("bit");

                    b.Property<string>("CertificadoLibTrad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ConfirmoMotivo")
                        .HasColumnType("bit");

                    b.Property<string>("Contrato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EsExclusivo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioAdmon")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PublicacionComercialId")
                        .HasColumnType("int");

                    b.Property<int?>("PublicacionIndustrialId")
                        .HasColumnType("int");

                    b.Property<int?>("PublicacionLoteId")
                        .HasColumnType("int");

                    b.Property<int?>("PublicacionViviendaId")
                        .HasColumnType("int");

                    b.Property<bool>("PublicadoPortales")
                        .HasColumnType("bit");

                    b.Property<string>("Razon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoPublicacion")
                        .HasColumnType("int");

                    b.Property<int>("TipoUrgencia")
                        .HasColumnType("int");

                    b.Property<int>("Visitas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgenteId");

                    b.HasIndex("PublicacionComercialId");

                    b.HasIndex("PublicacionIndustrialId");

                    b.HasIndex("PublicacionLoteId");

                    b.HasIndex("PublicacionViviendaId");

                    b.ToTable("Publicaciones");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.PublicacionComercial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.Property<int>("TipoNegocioComercial")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropiedadId");

                    b.ToTable("PublicacionComerciales");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.PublicacionIndustrial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.Property<int>("TipoNegocioIndustrial")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropiedadId");

                    b.ToTable("PublicacionIndustriales");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.PublicacionLote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.Property<int>("TipoNegocioLote")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropiedadId");

                    b.ToTable("PublicacionLotes");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.PublicacionVivienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.Property<int>("TipoNegocioVivienda")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropiedadId");

                    b.ToTable("PublicacionViviendas");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.TipoCaracteristica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoCaracteristicas");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.TipoDocumentoPropiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RequisitoPublicacion")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TipoDocumentoPropiedades");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.TipoZona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoZonas");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Vivienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Amoblado")
                        .HasColumnType("bit");

                    b.Property<int>("AnioConstruccion")
                        .HasColumnType("int");

                    b.Property<decimal>("AreaConstruida")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AreaLote")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AreaPrivada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AreaTerraza")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Balcones")
                        .HasColumnType("int");

                    b.Property<int>("Banos")
                        .HasColumnType("int");

                    b.Property<int>("BanosServicio")
                        .HasColumnType("int");

                    b.Property<int>("BanosSociales")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deposito")
                        .HasColumnType("bit");

                    b.Property<int>("EstacionamientosCubiertos")
                        .HasColumnType("int");

                    b.Property<int>("EstacionamientosDescubiertos")
                        .HasColumnType("int");

                    b.Property<int>("EstacionamientosTotales")
                        .HasColumnType("int");

                    b.Property<int>("Estrato")
                        .HasColumnType("int");

                    b.Property<int>("Estudios")
                        .HasColumnType("int");

                    b.Property<int>("Habitaciones")
                        .HasColumnType("int");

                    b.Property<int>("HabitacionesAuxiliares")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.Property<int>("Terrazas")
                        .HasColumnType("int");

                    b.Property<int>("TipoEstacionamientos")
                        .HasColumnType("int");

                    b.Property<int>("TipoVivienda")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropiedadId")
                        .IsUnique();

                    b.ToTable("Viviendas");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Zona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoZonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoZonaId");

                    b.ToTable("Zonas");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.ZonaDommun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AgenteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoZonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgenteId");

                    b.HasIndex("TipoZonaId");

                    b.ToTable("ZonaDommuns");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Zonificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zonificaciones");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Agente", b =>
                {
                    b.HasOne("DommunBackend.DomainLayer.Models.Municipio", "Municipio")
                        .WithMany("Agentes")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DommunBackend.DomainLayer.Models.PlanMembresia", "PlanMembresia")
                        .WithMany("Agentes")
                        .HasForeignKey("PlanMembresiaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DommunBackend.DomainLayer.Models.Zonificacion", "Zonificacion")
                        .WithMany("Agentes")
                        .HasForeignKey("ZonificacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Municipio");

                    b.Navigation("PlanMembresia");

                    b.Navigation("Zonificacion");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Caracteristica", b =>
                {
                    b.HasOne("DommunBackend.DomainLayer.Models.TipoCaracteristica", "TipoCaracteristica")
                        .WithMany("Caracteristicas")
                        .HasForeignKey("TipoCaracteristicaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoCaracteristica");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Cliente", b =>
                {
                    b.HasOne("DommunBackend.DomainLayer.Models.Agente", "Agente")
                        .WithMany("Clientes")
                        .HasForeignKey("AgenteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Agente");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Comercial", b =>
                {
                    b.HasOne("DommunBackend.DomainLayer.Models.Propiedad", "Propiedad")
                        .WithOne("Comercial")
                        .HasForeignKey("DommunBackend.DomainLayer.Models.Comercial", "PropiedadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.DocumentoPropiedad", b =>
                {
                    b.HasOne("DommunBackend.DomainLayer.Models.TipoDocumentoPropiedad", "TipoDocumentoPropiedad")
                        .WithMany("DocumentoPropiedades")
                        .HasForeignKey("TipoDocumentoPropiedadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoDocumentoPropiedad");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.FotografiaPropiedad", b =>
                {
                    b.HasOne("DommunBackend.DomainLayer.Models.Propiedad", "Propiedad")
                        .WithMany("FotografiaPropiedades")
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.GestionDocumental", b =>
                {
                    b.HasOne("DommunBackend.DomainLayer.Models.CatGestionDocumental", "CatGestionDocumental")
                        .WithMany("GestionDocumentales")
                        .HasForeignKey("CatGestionDocumentalId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CatGestionDocumental");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Industrial", b =>
                {
                    b.HasOne("DommunBackend.DomainLayer.Models.Propiedad", "Propiedad")
                        .WithOne("Industrial")
                        .HasForeignKey("DommunBackend.DomainLayer.Models.Industrial", "PropiedadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Lote", b =>
                {
                    b.HasOne("DommunBackend.DomainLayer.Models.Propiedad", "Propiedad")
                        .WithOne("Lote")
                        .HasForeignKey("DommunBackend.DomainLayer.Models.Lote", "PropiedadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Municipio", b =>
                {
                    b.HasOne("DommunBackend.DomainLayer.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Propiedad", b =>
                {
                    b.HasOne("DommunBackend.DomainLayer.Models.Agente", "Agente")
                        .WithMany("Propiedades")
                        .HasForeignKey("AgenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DommunBackend.DomainLayer.Models.Caracteristica", "Caracteristica")
                        .WithMany("Propiedades")
                        .HasForeignKey("CaracteristicaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DommunBackend.DomainLayer.Models.Cliente", "Cliente")
                        .WithMany("Propiedades")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DommunBackend.DomainLayer.Models.Municipio", "Municipio")
                        .WithMany("Propiedades")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agente");

                    b.Navigation("Caracteristica");

                    b.Navigation("Cliente");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Publicacion", b =>
                {
                    b.HasOne("DommunBackend.DomainLayer.Models.Agente", "Agente")
                        .WithMany("Publicaciones")
                        .HasForeignKey("AgenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DommunBackend.DomainLayer.Models.PublicacionComercial", "PublicacionComercial")
                        .WithMany()
                        .HasForeignKey("PublicacionComercialId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DommunBackend.DomainLayer.Models.PublicacionIndustrial", "PublicacionIndustrial")
                        .WithMany()
                        .HasForeignKey("PublicacionIndustrialId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DommunBackend.DomainLayer.Models.PublicacionLote", "PublicacionLote")
                        .WithMany()
                        .HasForeignKey("PublicacionLoteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DommunBackend.DomainLayer.Models.PublicacionVivienda", "PublicacionVivienda")
                        .WithMany()
                        .HasForeignKey("PublicacionViviendaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Agente");

                    b.Navigation("PublicacionComercial");

                    b.Navigation("PublicacionIndustrial");

                    b.Navigation("PublicacionLote");

                    b.Navigation("PublicacionVivienda");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.PublicacionComercial", b =>
                {
                    b.HasOne("DommunBackend.DomainLayer.Models.Propiedad", "Propiedad")
                        .WithMany()
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.PublicacionIndustrial", b =>
                {
                    b.HasOne("DommunBackend.DomainLayer.Models.Propiedad", "Propiedad")
                        .WithMany()
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.PublicacionLote", b =>
                {
                    b.HasOne("DommunBackend.DomainLayer.Models.Propiedad", "Propiedad")
                        .WithMany()
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.PublicacionVivienda", b =>
                {
                    b.HasOne("DommunBackend.DomainLayer.Models.Propiedad", "Propiedad")
                        .WithMany()
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Vivienda", b =>
                {
                    b.HasOne("DommunBackend.DomainLayer.Models.Propiedad", "Propiedad")
                        .WithOne("Vivienda")
                        .HasForeignKey("DommunBackend.DomainLayer.Models.Vivienda", "PropiedadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Zona", b =>
                {
                    b.HasOne("DommunBackend.DomainLayer.Models.TipoZona", "TipoZona")
                        .WithMany("Zonas")
                        .HasForeignKey("TipoZonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoZona");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.ZonaDommun", b =>
                {
                    b.HasOne("DommunBackend.DomainLayer.Models.Agente", "Agente")
                        .WithMany("ZonaDommuns")
                        .HasForeignKey("AgenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DommunBackend.DomainLayer.Models.TipoZona", "TipoZona")
                        .WithMany("ZonaDommuns")
                        .HasForeignKey("TipoZonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agente");

                    b.Navigation("TipoZona");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Agente", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Propiedades");

                    b.Navigation("Publicaciones");

                    b.Navigation("ZonaDommuns");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Caracteristica", b =>
                {
                    b.Navigation("Propiedades");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.CatGestionDocumental", b =>
                {
                    b.Navigation("GestionDocumentales");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Cliente", b =>
                {
                    b.Navigation("Propiedades");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Municipio", b =>
                {
                    b.Navigation("Agentes");

                    b.Navigation("Propiedades");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.PlanMembresia", b =>
                {
                    b.Navigation("Agentes");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Propiedad", b =>
                {
                    b.Navigation("Comercial");

                    b.Navigation("FotografiaPropiedades");

                    b.Navigation("Industrial");

                    b.Navigation("Lote");

                    b.Navigation("Vivienda");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.TipoCaracteristica", b =>
                {
                    b.Navigation("Caracteristicas");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.TipoDocumentoPropiedad", b =>
                {
                    b.Navigation("DocumentoPropiedades");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.TipoZona", b =>
                {
                    b.Navigation("ZonaDommuns");

                    b.Navigation("Zonas");
                });

            modelBuilder.Entity("DommunBackend.DomainLayer.Models.Zonificacion", b =>
                {
                    b.Navigation("Agentes");
                });
#pragma warning restore 612, 618
        }
    }
}
