// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepositoryLayer;

#nullable disable

namespace RepositoryLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220820032738_seder3")]
    partial class seder3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DomainLayer.Models.Agente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellidos")
                        .HasColumnType("longtext");

                    b.Property<string>("Celular")
                        .HasColumnType("longtext");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescripcionPerfil")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Facebook")
                        .HasColumnType("longtext");

                    b.Property<string>("FotoPerfil")
                        .HasColumnType("longtext");

                    b.Property<int?>("InmobiliariaId")
                        .HasColumnType("int");

                    b.Property<string>("Instagram")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Linkedin")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombres")
                        .HasColumnType("longtext");

                    b.Property<string>("Slug")
                        .HasColumnType("longtext");

                    b.Property<string>("Twitter")
                        .HasColumnType("longtext");

                    b.Property<string>("Website")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("InmobiliariaId");

                    b.ToTable("Agentes");
                });

            modelBuilder.Entity("DomainLayer.Models.Caracteristica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("longtext");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<int>("TipoCaracteristicaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoCaracteristicaId");

                    b.ToTable("Caracteristicas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = "1",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5263),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Garaje(s)",
                            TipoCaracteristicaId = 1
                        },
                        new
                        {
                            Id = 2,
                            Codigo = "2",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5264),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Jardín",
                            TipoCaracteristicaId = 1
                        },
                        new
                        {
                            Id = 3,
                            Codigo = "3",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5265),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Sala de internet",
                            TipoCaracteristicaId = 1
                        },
                        new
                        {
                            Id = 4,
                            Codigo = "4",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5267),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Salón Comunal",
                            TipoCaracteristicaId = 1
                        },
                        new
                        {
                            Id = 5,
                            Codigo = "5",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5268),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Terraza",
                            TipoCaracteristicaId = 1
                        },
                        new
                        {
                            Id = 6,
                            Codigo = "6",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5269),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Vista panorámica",
                            TipoCaracteristicaId = 1
                        },
                        new
                        {
                            Id = 7,
                            Codigo = "7",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5270),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Vivienda Bifamiliar",
                            TipoCaracteristicaId = 1
                        },
                        new
                        {
                            Id = 8,
                            Codigo = "8",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5271),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Vivienda Multifamiliar",
                            TipoCaracteristicaId = 1
                        },
                        new
                        {
                            Id = 9,
                            Codigo = "9",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5273),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Zonas Verdes",
                            TipoCaracteristicaId = 1
                        },
                        new
                        {
                            Id = 10,
                            Codigo = "10",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5274),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Alarma",
                            TipoCaracteristicaId = 2
                        },
                        new
                        {
                            Id = 11,
                            Codigo = "11",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5275),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Baño Auxiliar",
                            TipoCaracteristicaId = 2
                        },
                        new
                        {
                            Id = 12,
                            Codigo = "12",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5276),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Cocina Integral",
                            TipoCaracteristicaId = 2
                        },
                        new
                        {
                            Id = 13,
                            Codigo = "13",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5277),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Comedor auxiliar",
                            TipoCaracteristicaId = 2
                        },
                        new
                        {
                            Id = 14,
                            Codigo = "14",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5278),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Cuarto de Servicio",
                            TipoCaracteristicaId = 2
                        },
                        new
                        {
                            Id = 15,
                            Codigo = "15",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5280),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Depósito / Bodega",
                            TipoCaracteristicaId = 2
                        },
                        new
                        {
                            Id = 16,
                            Codigo = "16",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5281),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Despensa",
                            TipoCaracteristicaId = 2
                        },
                        new
                        {
                            Id = 17,
                            Codigo = "17",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5282),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Estudio",
                            TipoCaracteristicaId = 2
                        },
                        new
                        {
                            Id = 18,
                            Codigo = "18",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5283),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Hall de Alcobas",
                            TipoCaracteristicaId = 2
                        },
                        new
                        {
                            Id = 19,
                            Codigo = "19",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5284),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Instalación de gas",
                            TipoCaracteristicaId = 2
                        },
                        new
                        {
                            Id = 20,
                            Codigo = "20",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5286),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Patio",
                            TipoCaracteristicaId = 2
                        },
                        new
                        {
                            Id = 21,
                            Codigo = "21",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5337),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Piso en Baldosa / Mármol",
                            TipoCaracteristicaId = 2
                        },
                        new
                        {
                            Id = 22,
                            Codigo = "22",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5338),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Zona de lavandería",
                            TipoCaracteristicaId = 2
                        },
                        new
                        {
                            Id = 23,
                            Codigo = "23",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5339),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Colegios / Universidades",
                            TipoCaracteristicaId = 3
                        },
                        new
                        {
                            Id = 24,
                            Codigo = "24",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5340),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Parques cercanos",
                            TipoCaracteristicaId = 3
                        },
                        new
                        {
                            Id = 25,
                            Codigo = "25",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5341),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Sobre vía principal",
                            TipoCaracteristicaId = 3
                        },
                        new
                        {
                            Id = 26,
                            Codigo = "26",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5343),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Supermercados / C.Comerciales",
                            TipoCaracteristicaId = 3
                        },
                        new
                        {
                            Id = 27,
                            Codigo = "27",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5344),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Trans. Público cercano",
                            TipoCaracteristicaId = 3
                        },
                        new
                        {
                            Id = 28,
                            Codigo = "28",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5345),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Zona Campestre",
                            TipoCaracteristicaId = 3
                        },
                        new
                        {
                            Id = 29,
                            Codigo = "29",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5346),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Zona Residencial",
                            TipoCaracteristicaId = 3
                        });
                });

            modelBuilder.Entity("DomainLayer.Models.CaracteristicaPropiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CaracteristicaId")
                        .HasColumnType("int");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("longtext");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaracteristicaId");

                    b.HasIndex("PropiedadId");

                    b.ToTable("CaracteristicaPropiedades");
                });

            modelBuilder.Entity("DomainLayer.Models.Ciudad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("longtext");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Ciudades");
                });

            modelBuilder.Entity("DomainLayer.Models.EstadoPropiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("longtext");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("EstadoPropiedades");
                });

            modelBuilder.Entity("DomainLayer.Models.Estrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("longtext");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Estratos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = "1",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5220),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Uno"
                        },
                        new
                        {
                            Id = 2,
                            Codigo = "2",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5221),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Dos"
                        },
                        new
                        {
                            Id = 3,
                            Codigo = "3",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5222),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Tres"
                        },
                        new
                        {
                            Id = 4,
                            Codigo = "4",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5223),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Cuatro"
                        },
                        new
                        {
                            Id = 5,
                            Codigo = "5",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5225),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Cinco"
                        },
                        new
                        {
                            Id = 6,
                            Codigo = "6",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5226),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Seis"
                        });
                });

            modelBuilder.Entity("DomainLayer.Models.Fotografia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("EsPrincipal")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Imagen")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("longtext");

                    b.Property<bool>("Valida")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Fotografias");
                });

            modelBuilder.Entity("DomainLayer.Models.FotografiaPropiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FotografiaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("longtext");

                    b.Property<bool>("PropiedadId")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("PropiedadId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FotografiaId");

                    b.HasIndex("PropiedadId1");

                    b.ToTable("FotografiaPropiedades");
                });

            modelBuilder.Entity("DomainLayer.Models.Inmobiliaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("longtext");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("longtext");

                    b.Property<string>("Nit")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Inmobiliarias");
                });

            modelBuilder.Entity("DomainLayer.Models.Propiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Administracion")
                        .HasColumnType("double");

                    b.Property<int?>("AgenteId")
                        .HasColumnType("int");

                    b.Property<int>("AnioConstruccion")
                        .HasColumnType("int");

                    b.Property<int>("Antiguedad")
                        .HasColumnType("int");

                    b.Property<int>("AreaConstruida")
                        .HasColumnType("int");

                    b.Property<int>("AreaPrivada")
                        .HasColumnType("int");

                    b.Property<int>("Banos")
                        .HasColumnType("int");

                    b.Property<string>("Barrio")
                        .HasColumnType("longtext");

                    b.Property<string>("Caracteristicas")
                        .HasColumnType("longtext");

                    b.Property<int?>("CiudadId")
                        .HasColumnType("int");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<int?>("EstadoPropiedadId")
                        .HasColumnType("int");

                    b.Property<int?>("EstratoId")
                        .HasColumnType("int");

                    b.Property<int>("Habitaciones")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Localizacion")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("longtext");

                    b.Property<int>("Parqueaderos")
                        .HasColumnType("int");

                    b.Property<int>("Piso")
                        .HasColumnType("int");

                    b.Property<string>("Plano")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(65,30)");

                    b.Property<double>("PrecioMetro")
                        .HasColumnType("double");

                    b.Property<int?>("TipoNegocioId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoPropiedadId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("longtext");

                    b.Property<string>("Video")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AgenteId");

                    b.HasIndex("CiudadId");

                    b.HasIndex("EstadoPropiedadId");

                    b.HasIndex("EstratoId");

                    b.HasIndex("TipoNegocioId");

                    b.HasIndex("TipoPropiedadId");

                    b.ToTable("Propiedades");
                });

            modelBuilder.Entity("DomainLayer.Models.TipoCaracteristica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("longtext");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoCaracteristicas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = "1",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5247),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Características del exterior"
                        },
                        new
                        {
                            Id = 2,
                            Codigo = "2",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5248),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Características del interior"
                        },
                        new
                        {
                            Id = 3,
                            Codigo = "3",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5249),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Características del sector"
                        });
                });

            modelBuilder.Entity("DomainLayer.Models.TipoNegocio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("longtext");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoNegocios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = "01",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5201),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Arriendo"
                        },
                        new
                        {
                            Id = 2,
                            Codigo = "02",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5202),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Venta"
                        },
                        new
                        {
                            Id = 3,
                            Codigo = "03",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5204),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Super Oferta"
                        });
                });

            modelBuilder.Entity("DomainLayer.Models.TipoPropiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("longtext");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoPropiedades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = "01",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5172),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Oficina"
                        },
                        new
                        {
                            Id = 2,
                            Codigo = "02",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5183),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Casa"
                        },
                        new
                        {
                            Id = 3,
                            Codigo = "03",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5184),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Apartamento"
                        },
                        new
                        {
                            Id = 4,
                            Codigo = "04",
                            CreateUser = "b74ddd14-6340-4840-95c2-db12554843e5",
                            CreatedDate = new DateTime(2022, 8, 19, 22, 27, 38, 207, DateTimeKind.Local).AddTicks(5185),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Lote"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "fab4fac1-c546-41de-aebc-a14da6895711",
                            ConcurrencyStamp = "1",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            ConcurrencyStamp = "2",
                            Name = "Agente",
                            NormalizedName = "Agente"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            RoleId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RepositoryLayer.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db12554843e5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "554f455e-62c4-438b-b1af-6acf29583ae0",
                            Email = "reygue28@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEBmI/cVAquwP5R5NgDSozqpcajE2t5qIRTK+uRyyIoM8WAgiIx43R5f+lb5gZsB7Ew==",
                            PhoneNumber = "3015267740",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4da5074c-fad7-4166-b217-ad24bf6b002f",
                            TwoFactorEnabled = false,
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("DomainLayer.Models.Agente", b =>
                {
                    b.HasOne("DomainLayer.Models.Inmobiliaria", "Inmobiliaria")
                        .WithMany("Agentes")
                        .HasForeignKey("InmobiliariaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Inmobiliaria");
                });

            modelBuilder.Entity("DomainLayer.Models.Caracteristica", b =>
                {
                    b.HasOne("DomainLayer.Models.TipoCaracteristica", "TipoCaracteristica")
                        .WithMany("Caracteristicas")
                        .HasForeignKey("TipoCaracteristicaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoCaracteristica");
                });

            modelBuilder.Entity("DomainLayer.Models.CaracteristicaPropiedad", b =>
                {
                    b.HasOne("DomainLayer.Models.Caracteristica", "Caracteristica")
                        .WithMany("CaracteristicaPropiedades")
                        .HasForeignKey("CaracteristicaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.Propiedad", "Propiedad")
                        .WithMany("CaracteristicaPropiedades")
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Caracteristica");

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("DomainLayer.Models.FotografiaPropiedad", b =>
                {
                    b.HasOne("DomainLayer.Models.Fotografia", "Fotografia")
                        .WithMany("FotografiaPropiedades")
                        .HasForeignKey("FotografiaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.Propiedad", "Propiedad")
                        .WithMany("FotografiaPropiedades")
                        .HasForeignKey("PropiedadId1")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Fotografia");

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("DomainLayer.Models.Propiedad", b =>
                {
                    b.HasOne("DomainLayer.Models.Agente", "Agente")
                        .WithMany("Propiedades")
                        .HasForeignKey("AgenteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DomainLayer.Models.Ciudad", "Ciudad")
                        .WithMany("Propiedades")
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DomainLayer.Models.EstadoPropiedad", "EstadoPropiedad")
                        .WithMany("Propiedades")
                        .HasForeignKey("EstadoPropiedadId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DomainLayer.Models.Estrato", "Estrato")
                        .WithMany("Propiedades")
                        .HasForeignKey("EstratoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DomainLayer.Models.TipoNegocio", "TipoNegocio")
                        .WithMany("Propiedades")
                        .HasForeignKey("TipoNegocioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DomainLayer.Models.TipoPropiedad", "TipoPropiedad")
                        .WithMany("Propiedades")
                        .HasForeignKey("TipoPropiedadId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Agente");

                    b.Navigation("Ciudad");

                    b.Navigation("EstadoPropiedad");

                    b.Navigation("Estrato");

                    b.Navigation("TipoNegocio");

                    b.Navigation("TipoPropiedad");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("RepositoryLayer.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("RepositoryLayer.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RepositoryLayer.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("RepositoryLayer.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DomainLayer.Models.Agente", b =>
                {
                    b.Navigation("Propiedades");
                });

            modelBuilder.Entity("DomainLayer.Models.Caracteristica", b =>
                {
                    b.Navigation("CaracteristicaPropiedades");
                });

            modelBuilder.Entity("DomainLayer.Models.Ciudad", b =>
                {
                    b.Navigation("Propiedades");
                });

            modelBuilder.Entity("DomainLayer.Models.EstadoPropiedad", b =>
                {
                    b.Navigation("Propiedades");
                });

            modelBuilder.Entity("DomainLayer.Models.Estrato", b =>
                {
                    b.Navigation("Propiedades");
                });

            modelBuilder.Entity("DomainLayer.Models.Fotografia", b =>
                {
                    b.Navigation("FotografiaPropiedades");
                });

            modelBuilder.Entity("DomainLayer.Models.Inmobiliaria", b =>
                {
                    b.Navigation("Agentes");
                });

            modelBuilder.Entity("DomainLayer.Models.Propiedad", b =>
                {
                    b.Navigation("CaracteristicaPropiedades");

                    b.Navigation("FotografiaPropiedades");
                });

            modelBuilder.Entity("DomainLayer.Models.TipoCaracteristica", b =>
                {
                    b.Navigation("Caracteristicas");
                });

            modelBuilder.Entity("DomainLayer.Models.TipoNegocio", b =>
                {
                    b.Navigation("Propiedades");
                });

            modelBuilder.Entity("DomainLayer.Models.TipoPropiedad", b =>
                {
                    b.Navigation("Propiedades");
                });
#pragma warning restore 612, 618
        }
    }
}
